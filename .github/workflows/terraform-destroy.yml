name: Manual Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm you want to destroy the infrastructure'
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'DESTROY'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.4  # Specify your Terraform version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Adjust to your AWS region

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy
        id: destroy
        env:
          TF_VAR_aws_region: ${{ vars.TF_VAR_aws_region }}
          TF_VAR_vpc_cidr: ${{ vars.TF_VAR_vpc_cidr }}
          TF_VAR_instance_type: ${{ vars.TF_VAR_instance_type }}
          TF_VAR_ami_id: ${{ vars.TF_VAR_ami_id }}
          TF_VAR_db_instance_class: ${{ vars.TF_VAR_db_instance_class }}
          TF_VAR_db_name: ${{ vars.TF_VAR_db_name }}
          TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_bucket_name: ${{ secrets.TF_VAR_bucket_name }}
        run: |
          terraform destroy -auto-approve \
          -var="aws_region=${TF_VAR_aws_region}" \
          -var="vpc_cidr=${TF_VAR_vpc_cidr}" \
          -var="instance_type=${TF_VAR_instance_type}" \
          -var="ami_id=${TF_VAR_ami_id}" \
          -var="db_instance_class=${TF_VAR_db_instance_class}" \
          -var="db_name=${TF_VAR_db_name}" \
          -var="db_username=${TF_VAR_db_username}" \
          -var="db_password=${TF_VAR_db_password}" \
          -var="bucket_name=${TF_VAR_bucket_name}" \
          -input=false

      - name: Comment on Commit
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Destroy Operation
            #### Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Destroy üß®\`${{ steps.destroy.outcome }}\`
            
            *Triggered manually by: @${{ github.actor }}*`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: output
            })